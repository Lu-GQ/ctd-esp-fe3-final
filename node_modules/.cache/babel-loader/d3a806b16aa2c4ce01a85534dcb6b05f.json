{"ast":null,"code":"var _jsxFileName = \"/Users/diegomarcher/IdeaProjects/Examen Front End III/fe3-final/src/Components/Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const validate = () => {\n    let valid = true;\n    let errors = {};\n\n    if (formData.name.length < 5) {\n      errors.name = 'Nombre debe tener al menos 5 caracteres.';\n      valid = false;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (!emailRegex.test(formData.email)) {\n      errors.email = 'Formato de email incorrecto.';\n      valid = false;\n    }\n\n    setErrors(errors);\n    return valid;\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      setSuccessMessage(`Gracias ${formData.name}, te contactaremos cuando antes vía mail.`);\n    } else {\n      setSuccessMessage('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nombre completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"bxqLdgPlw9klgY+RlaLLBspFymY=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","Contact","formData","setFormData","name","email","errors","setErrors","successMessage","setSuccessMessage","validate","valid","length","emailRegex","test","handleChange","e","value","target","handleSubmit","preventDefault"],"sources":["/Users/diegomarcher/IdeaProjects/Examen Front End III/fe3-final/src/Components/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Contact = () => {\n  const [formData, setFormData] = useState({ name: '', email: '' });\n  const [errors, setErrors] = useState({});\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const validate = () => {\n    let valid = true;\n    let errors = {};\n\n    if (formData.name.length < 5) {\n      errors.name = 'Nombre debe tener al menos 5 caracteres.';\n      valid = false;\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      errors.email = 'Formato de email incorrecto.';\n      valid = false;\n    }\n\n    setErrors(errors);\n    return valid;\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validate()) {\n      setSuccessMessage(`Gracias ${formData.name}, te contactaremos cuando antes vía mail.`);\n    } else {\n      setSuccessMessage('');\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Nombre completo</label>\n          <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\n          {errors.name && <p>{errors.name}</p>}\n        </div>\n        <div>\n          <label>Email</label>\n          <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\n          {errors.email && <p>{errors.email}</p>}\n        </div>\n        <button type=\"submit\">Enviar</button>\n      </form>\n      {successMessage && <p>{successMessage}</p>}\n    </div>\n  );\n};\n\nexport default Contact;\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;IAAEI,IAAI,EAAE,EAAR;IAAYC,KAAK,EAAE;EAAnB,CAAD,CAAxC;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;;EAEA,MAAMU,QAAQ,GAAG,MAAM;IACrB,IAAIC,KAAK,GAAG,IAAZ;IACA,IAAIL,MAAM,GAAG,EAAb;;IAEA,IAAIJ,QAAQ,CAACE,IAAT,CAAcQ,MAAd,GAAuB,CAA3B,EAA8B;MAC5BN,MAAM,CAACF,IAAP,GAAc,0CAAd;MACAO,KAAK,GAAG,KAAR;IACD;;IAED,MAAME,UAAU,GAAG,4BAAnB;;IACA,IAAI,CAACA,UAAU,CAACC,IAAX,CAAgBZ,QAAQ,CAACG,KAAzB,CAAL,EAAsC;MACpCC,MAAM,CAACD,KAAP,GAAe,8BAAf;MACAM,KAAK,GAAG,KAAR;IACD;;IAEDJ,SAAS,CAACD,MAAD,CAAT;IACA,OAAOK,KAAP;EACD,CAjBD;;EAmBA,MAAMI,YAAY,GAAGC,CAAC,IAAI;IACxB,MAAM;MAAEZ,IAAF;MAAQa;IAAR,IAAkBD,CAAC,CAACE,MAA1B;IACAf,WAAW,CAAC,EAAE,GAAGD,QAAL;MAAe,CAACE,IAAD,GAAQa;IAAvB,CAAD,CAAX;EACD,CAHD;;EAKA,MAAME,YAAY,GAAGH,CAAC,IAAI;IACxBA,CAAC,CAACI,cAAF;;IACA,IAAIV,QAAQ,EAAZ,EAAgB;MACdD,iBAAiB,CAAE,WAAUP,QAAQ,CAACE,IAAK,2CAA1B,CAAjB;IACD,CAFD,MAEO;MACLK,iBAAiB,CAAC,EAAD,CAAjB;IACD;EACF,CAPD;;EASA,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEU,YAAhB;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,MAAxB;UAA+B,KAAK,EAAEjB,QAAQ,CAACE,IAA/C;UAAqD,QAAQ,EAAEW;QAA/D;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGT,MAAM,CAACF,IAAP,iBAAe;UAAA,UAAIE,MAAM,CAACF;QAAX;UAAA;UAAA;UAAA;QAAA,QAHlB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,OAAZ;UAAoB,IAAI,EAAC,OAAzB;UAAiC,KAAK,EAAEF,QAAQ,CAACG,KAAjD;UAAwD,QAAQ,EAAEU;QAAlE;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGT,MAAM,CAACD,KAAP,iBAAgB;UAAA,UAAIC,MAAM,CAACD;QAAX;UAAA;UAAA;UAAA;QAAA,QAHnB;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAWE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAcGG,cAAc,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QAdrB;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CAxDD;;GAAMP,O;;KAAAA,O;AA0DN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}